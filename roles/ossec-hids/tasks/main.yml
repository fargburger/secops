---
- name: install build prereq packages
  apt:
    name:
    - gcc
    - make
    - libevent-dev
    - zlib1g-dev
    - libssl-dev
    - libpcre2-dev
    - libsystemd-dev
    - wget
    - tar
  when: ansible_pkg_mgr == 'apt'

- name: download ossec code
  git:
    repo: https://github.com/ossec/ossec-hids.git
    dest: /opt/ossec-hids
  ignore_errors: yes

- name: add preloaded vars
  copy:
    dest: /opt/ossec-hids/etc/preloaded-vars.conf
    content: | 
      USER_LANGUAGE="{{ ossec_user_language }}"
      USER_NO_STOP="{{ ossec_user_no_stop }}"
      USER_INSTALL_TYPE="{{ ossec_user_install_type }}"
      USER_DIR="{{ ossec_user_dir }}"
      USER_DELETE_DIR=" {{ ossec_user_delete_dir }}"
      USER_ENABLE_ACTIVE_RESPONSE="{{ ossec_user_enable_active_response}}"
      USER_ENABLE_SYSCHECK="{{ ossec_user_enable_syscheck }}"
      USER_ENABLE_ROOTCHECK="{{ ossec_user_enable_rootcheck }}"
      USER_UPDATE="{{ ossec_user_update }}"
      USER_UPDATE_RULES="{{ ossec_user_update_rules }}"
      USER_BINARYINSTALL="{{ ossec_user_binaryinstall }}"
      USER_ENABLE_EMAIL="{{ ossec_user_enable_email }}"
      USER_EMAIL_ADDRESS="{{ ossec_user_email_address }}"
      USER_EMAIL_SMTP="{{ ossec_user_email_smtp }}"
      USER_ENABLE_SYSLOG="{{ ossec_user_enable_syslog }}"
      USER_ENABLE_FIREWALL_RESPONSE="{{ ossec_user_enable_firewall_response }}"
      USER_WHITE_LIST="{{ ossec_user_white_list }}"

- name: run the ossec installer
  shell: |
    cd /opt/ossec-hids
    ./install.sh

- name: enable the ossec service
  systemd:
    name: ossec
    state: started
    enabled: yes


...
