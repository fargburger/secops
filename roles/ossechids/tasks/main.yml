---
- name: install build prereq packages (apt)
  apt:
    name:
    - gcc
    - make
    - libevent-dev
    - zlib1g-dev
    - libssl-dev
    - libpcre2-dev
    - libsystemd-dev
    - wget
    - tar
  when: ansible_pkg_mgr == 'apt'

- name: install build prereq packages (dnf) 
  dnf:
    name:
    - zlib-devel
    - pcre2-devel
    - make
    - gcc
    - sqlite-devel
    - openssl-devel
    - libevent-devel
    - systemd-devel
  when: ansible_pkg_mgr == 'dnf'

- name: download ossec code
  git:
    repo: https://github.com/ossec/ossec-hids.git
    dest: /opt/ossec-hids
  ignore_errors: yes

- name: add preloaded vars
  copy:
    dest: /opt/ossec-hids/etc/preloaded-vars.conf
    content: | 
      USER_LANGUAGE="{{ ossec_user_language }}"
      USER_NO_STOP="{{ ossec_user_no_stop }}"
      USER_INSTALL_TYPE="{{ ossec_user_install_type }}"
      USER_DIR="{{ ossec_user_dir }}"
      USER_DELETE_DIR=" {{ ossec_user_delete_dir }}"
      USER_ENABLE_ACTIVE_RESPONSE="{{ ossec_user_enable_active_response}}"
      USER_ENABLE_SYSCHECK="{{ ossec_user_enable_syscheck }}"
      USER_ENABLE_ROOTCHECK="{{ ossec_user_enable_rootcheck }}"
      USER_UPDATE="{{ ossec_user_update }}"
      USER_UPDATE_RULES="{{ ossec_user_update_rules }}"
      USER_BINARYINSTALL="{{ ossec_user_binaryinstall }}"
      USER_ENABLE_EMAIL="{{ ossec_user_enable_email }}"
      USER_EMAIL_ADDRESS="{{ ossec_user_email_address }}"
      USER_EMAIL_SMTP="{{ ossec_user_email_smtp }}"
      USER_ENABLE_SYSLOG="{{ ossec_user_enable_syslog }}"
      USER_ENABLE_FIREWALL_RESPONSE="{{ ossec_user_enable_firewall_response }}"
      USER_WHITE_LIST="{{ ossec_user_white_list }}"

- name: run the ossec installer
  shell: |
    cd /opt/ossec-hids
    ./install.sh

- name: install old service manager for backwards compatability
  dnf:
    name:
    - chkconfig
    - initscripts
  when: ansible_pkg_mgr == 'dnf'


#TODO need to run grep ossec /var/log/audit/audit.log | audit2allow -a -M ossec
#                            semanage -i ossec.pp  
#                            systemctl start ossec 
#                            until the service starts
#- name: install selinux overrides for ossec-hids
#  git:
#    repo: https://github.com/georou/ossec-selinux.git
#    dest: /opt/ossec-selinux
#- name: install selinux tools
#  dnf:
#    name:
#    - selinux-policy-devel
#    - setools-console
#
#- name: make selinux module for ossec
#  command: make -f /usr/share/selinux/devel/Makefile ossec.pp
#  args:
#    chdir: /opt/ossec-selinux
#
#- name: patch firewall drop script
#  lineinfile: 
#    path: "{{ item }}"
#    regex: "^PWD=`pwd`$"
#    line: 'PWD="/var/ossec/var/run"'
#  loop:
#  - /var/ossec/active-response/bin/firewalld-drop.sh
#  - /var/ossec/active-response/bin/firewall-drop.sh
#
#- name: install selinux if file for ossec
#  copy:
#    src: /opt/ossec-selinux/ossec.if
#    dest: /usr/share/selinux/devel/include/apps/ossec.if
#   mode: "0664"
#    owner: root
#    group: root
#    remote_src: yes
#
#- name: install selinux policy module for ossec
#  command: semodule -i /opt/ossec-selinux/ossec.pp
#
#- name: restore context labels for selinux ossec
#  command: restorecon -Rv /var/ossec
#
#- name: restore context labels for selinux ossec init
#  command: restorecon -v /etc/init.d/ossec*
#
#- name: stop ossec if started by installer
#  command: /var/ossec/bin/ossec-control stop

- name: enable the ossec service
  systemd:
    name: ossec
    state: started
    enabled: yes
    daemon_reload: yes


...
